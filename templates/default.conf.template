server {
    listen 80;
    server_name ${SERVER_NAME};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name ${SERVER_NAME};

    # ssl certificates
    ssl_certificate /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;

    # gzip compression
    gzip on;
    gzip_types text/html application/javascript application/json text/css;

    # errors pages
    error_page 404 /404.html;
    error_page 403 500 502 503 /50x.html;

    # # Proxy API and Admin requests to the server
    location ~ ^/api/ {
        gzip off;

        proxy_pass http://server:${SERVER_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 404 error page
    location = /404.html {
        root /usr/share/nginx/public/;
        internal;
    }

    # 500x errors pages
    location = /50x.html {
        root /usr/share/nginx/public/;
        internal;
    }

    # other
    location / {
        root /usr/share/nginx;
        try_files $uri $uri/ /index.html;
    }

    # logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

server {
    listen 80;
    server_name bot.telegram.${SERVER_NAME};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name bot.telegram.${SERVER_NAME};

    # ssl certificates
    ssl_certificate /etc/letsencrypt/live/bot.telegram.${SERVER_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bot.telegram.${SERVER_NAME}/privkey.pem;

    # other
    location / {
        proxy_pass http://telegram_bot:${MINI_APP_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

server {
    listen 80;
    server_name admin.${SERVER_NAME};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name admin.${SERVER_NAME};

    # ssl certificates
    ssl_certificate /etc/letsencrypt/live/bot.telegram.${SERVER_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bot.telegram.${SERVER_NAME}/privkey.pem;

    # other
    location / {
        proxy_pass http://pgadmin:5050;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
