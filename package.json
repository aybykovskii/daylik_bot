{
  "name": "daylik_bot",
  "version": "0.0.1",
  "description": "Telegram bot for creating and managing events",
  "author": "Aleksei Bykovskii<aybykovskii@gamil.com>",
  "workspaces": [
    "packages/*",
    "apps/*"
  ],
  "scripts": {
    "miniapp": "cd apps/miniapp && bun run start",
    "miniapp:build": "cd apps/miniapp && bun run build",
    "server:run": "cd ./apps/server && bun run start",
    "server:migrate": "cd ./apps/server && pnpx sequelize-cli db:migrate",
    "server:migrate:rollback": "cd ./apps/server && pnpx sequelize-cli db:migrate:undo",
    "telegramBot:run": "cd ./apps/telegramBot && bun run bot.ts",
    "check:types": "tsc --noEmit",
    "check:biome": "biome check .",
    "format:biome": "biome format .",
    "ansible:update-certificates": "ansible-playbook -i ansible/inventory.yaml ansible/playbooks/update-certificates.yaml",
    "ansible:deploy": "ansible-playbook -i ansible/inventory.yaml ansible/playbooks/deploy.yaml",
    "ansible:pull-logs": "ansible-playbook -i ansible/inventory.yaml ansible/playbooks/pull-logs.yaml",
    "ansible:update-fail2ban": "ansible-playbook -i ansible/inventory.yaml ansible/playbooks/update-fail2ban.yaml",
    "ansible:update-nginx": "ansible-playbook -i ansible/inventory.yaml ansible/playbooks/update-nginx.yaml",
    "copy:env:dev": "cat .env | tee docker/.env packages/shared/.env > /dev/null",
    "copy:env:prod": "cat .env .env.production | tee docker/.env packages/shared/.env > /dev/null",
    "docker:run:db": "bun run copy:env:dev && docker compose -f docker/compose.db.yaml up -d",
    "docker:run:apps": "bun run copy:env:dev && docker compose -f docker/compose.yaml --profile all up --build",
    "docker:run:apps:prod": "bun run copy:env:prod && docker compose -f docker/compose.yaml --profile all up --build --detach",
    "docker:run:server": "bun run copy:env:dev && docker compose -f docker/compose.yaml --profile server up --build",
    "docker:run:bot": "bun run copy:env:dev && docker compose -f docker/compose.yaml --profile bot up --build",
    "docker:stop:db": "docker compose -f docker/compose.db.yaml down",
    "docker:stop:apps:prod": "NODE_ENV=production docker compose -f docker/compose.yaml --profile all down"
  },
  "license": "ISC",
  "dependencies": {
    "@hono/arktype-validator": "^2.0.0",
    "@trivago/prettier-plugin-sort-imports": "^5.2.2",
    "@types/amqplib": "^0.10.7",
    "@types/bun": "^1.2.10",
    "amqplib": "^0.10.7",
    "arktype": "^2.1.15",
    "dayjs": "^1.11.12",
    "hono": "^4.7.5",
    "hono-openapi": "^0.4.6",
    "neverthrow": "^8.2.0",
    "prettier": "^3.5.3",
    "sass": "^1.86.3",
    "sass-embedded": "^1.86.3",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@biomejs/biome": "1.8.3",
    "@types/node": "~18.16.9",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.3"
  }
}
