- name: Деплой проекта
  hosts: servers
  become: true
  vars_files:
    - env.yaml
  become_user: "{{ user }}"
  vars:
    github_repo_path: "https://github.com/{{ github_username }}/{{ github_repo }}.git"
    repo_path: "/home/{{ user }}/{{ github_repo }}"
    docker_compose_apps_path: "{{ repo_path }}/docker-compose.production.yaml"

  tasks:
  - name: Клонируем репозиторий
    git:
      repo: "{{ github_repo_path }}"
      dest: "/home/{{ user }}/{{ github_repo }}"
      accept_hostkey: yes
      force: yes
    become_user: "{{ user }}"

  - name: Копируем env файл
    copy:
      src: "../../.production.env"
      dest: "/home/{{ user }}/{{ github_repo }}/.env"
      force: yes
    become_user: "{{ user }}"

  - name: Копируем prompts файл
    copy:
      src: "../../prompts.json"
      dest: "/home/{{ user }}/{{ github_repo }}/prompts.json"
      force: yes
    become_user: "{{ user }}"

  - name: Логин в Docker Registry
    docker_login:
      username: "{{ docker_user }}"
      password: "{{ docker_password }}"

  - name: Останавливаем apps docker compose
    community.docker.docker_compose_v2:
      project_src: "{{ repo_path }}"
      files: 
      - docker-compose.production.yaml
      state: absent

  - name: Запускаем apps docker compose
    community.docker.docker_compose_v2:
      project_src: "{{ repo_path }}"
      files: 
      - docker-compose.production.yaml
      build: always
      state: present
    register: apps_compose

  - name: Результаты apps docker compose
    debug:
      var: apps_compose

  - name: Создаем контейнер miniapp
    community.docker.docker_container:
      name: "{{ miniapp_name }}"
      image: daylik_bot-miniapp
      state: present

  - name: Удаляем старую статику
    file:
      path: "{{ repo_path }}/static/"
      state: absent
    become_user: root

  - name: Копируем статику miniapp
    command: "docker cp {{ miniapp_name }}:/app/apps/miniapp/dist {{ repo_path }}/static"
    become_user: root

  - name: Удаляем контейнер miniapp
    community.docker.docker_container:
      name: "{{ miniapp_name }}"
      image: daylik_bot-miniapp
      state: absent

  - name: Перезапускаем apps docker compose
    community.docker.docker_compose_v2:
      project_src: "{{ repo_path }}"
      files: 
      - docker-compose.production.yaml
      state: restarted

  - name: Удаляем старые образы и контейнеры
    community.docker.docker_prune:
      containers: true
      images: true