server {
    listen 80;
    server_name {{ server_name }};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name {{ server_name }};

    # ssl certificates
    ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;

    # gzip compression
    gzip on;
    gzip_types text/html application/javascript application/json text/css;

    # errors pages
    error_page 404 /404.html;
    error_page 403 500 502 503 /50x.html;

    # # Proxy API and Admin requests to the server
    location /api/ {
        gzip off;

        proxy_pass http://127.0.0.1:{{ server_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 404 error page
    location = /404.html {
        root /usr/share/nginx/html/;
        internal;
    }

    # 500x errors pages
    location = /50x.html {
        root /usr/share/nginx/html/;
        internal;
    }

    # cache static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
    }

    # do not cache html files
    location ~* \.html$ {
        add_header Cache-Control "no-store";
    }

    # other
    location / {
        root /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
    }

    # logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

server {
    listen 80;
    server_name bot.telegram.{{ server_name }};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name bot.telegram.{{ server_name }};

    # ssl certificates
    ssl_certificate /etc/letsencrypt/live/bot.telegram.{{ server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bot.telegram.{{ server_name }}/privkey.pem;

    # other
    location / {
        proxy_pass http://127.0.0.1:{{ bot_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

server {
    listen 80;
    server_name admin.{{ server_name }};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name admin.{{ server_name }};

    # ssl certificates
    ssl_certificate /etc/letsencrypt/live/bot.telegram.{{ server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bot.telegram.{{ server_name }}/privkey.pem;

    # other
    location / {
        proxy_pass http://127.0.0.1:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
